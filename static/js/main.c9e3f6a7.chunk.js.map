{"version":3,"sources":["serviceWorker.js","components/Search/SearchStyles.js","components/Search/hooks/useSearch.js","components/Item/Item.js","components/Details/hooks/useDetails.js","utils/utils.js","components/DependencyGraph/hooks/useDependencyGraph.js","components/DependencyGraph/DepedencyGraphOptions.js","components/DependencyGraph/DependencyGraph.js","components/Details/Details.js","components/Search/Search.js","components/App/App.js","index.js"],"names":["Boolean","window","location","hostname","match","scrollStyles","bottom","right","useSearch","searchTerm","useState","loading","setLoading","error","setError","errorMsg","setErrorMsg","loadTime","setLoadTime","totalResults","setTotalResults","results","setResults","hasNextPage","setHasNextPage","url","a","prevResults","startCursor","axios","response","Promise","resolve","setTimeout","newResults","i","data","objects","length","concat","useEffect","timerStart","Date","now","total","fetchData","infiniteRef","useInfiniteScroll","onLoadMore","loadItems","then","scrollContainer","Items","package","name","description","version","keywords","to","pathname","state","packageName","className","searchScore","map","tag","key","uuidv1","useDetails","apiData","setApiData","Object","entries","value","latest","filter","item","toString","versions","timer","ms","res","useDependencyGraph","graph","setGraph","progress","setProgress","nodes","id","label","title","edges","Set","queue","visited","queueItem","shift","fetchDepedencies","parent","children","add","forEach","child","node","color","randomColor","edge","from","has","push","loadDependencies","dependenciesArr","dependencies","options","height","physics","enabled","interaction","hideEdgesOnDrag","layout","hierarchical","font","face","multi","shape","size","inherit","width","smooth","type","DependencyGraph","Loader","indeterminate","active","inline","content","style","margin","Message","obj","prop","hasOwnProperty","JSON","stringify","isEmpty","Details","useLocation","param","useParams","history","useHistory","href","onClick","event","preventDefault","goBack","handleClick","Search","query","setQuery","search","setSearch","referrer","split","Form","onSubmit","handleSubmit","Input","action","Button","primary","fluid","icon","iconPosition","placeholder","onChange","target","handleChange","exact","path","ref","showUnder","Icon","App","Container","ReactDOM","render","basename","substr","lastIndexOf","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c9e3f6a7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://create-react-app.dev/docs/making-a-progressive-web-app/\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const scrollStyles = {\n  bottom: 30,\n  right: 20\n}\n\nexport { scrollStyles }","import { useState, useEffect } from \"react\"\nimport { useInfiniteScroll } from \"react-infinite-scroll-hook\"\nimport axios from \"axios\"\n\nfunction useSearch(searchTerm) {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [errorMsg, setErrorMsg] = useState(\"\")\n  const [loadTime, setLoadTime] = useState(null)\n  const [totalResults, setTotalResults] = useState(null)\n  const [results, setResults] = useState(null)\n  const [hasNextPage, setHasNextPage] = useState(true)\n\n  const proxy = \"https://cors-anywhere.herokuapp.com\"\n  const url = \"http://registry.npmjs.org\"\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // UI bits\n        const timerStart = Date.now()\n        setLoading(true)\n        setResults(null) // clear previous search results\n\n        // API\n        const response = await axios(`${proxy}/${url}/-/v1/search?text=${searchTerm}`)\n        setResults(response.data.objects)\n        setTotalResults(response.data.total)\n\n        // UI bits\n        setLoading(false)\n        setLoadTime((Date.now() - timerStart) / 1000)\n\n        // Hide infinite scroll loading if no more than 20 results\n        response.data.objects.length < 20 && setHasNextPage(false)\n      } catch (error) {\n        setError(true)\n        setErrorMsg(\"We cannot fetch the data at the moment. Please try again later.\")\n        setLoading(false)\n        setHasNextPage(false)\n      }\n    }\n\n    if (searchTerm !== \"\") {\n      fetchData()\n    }\n  }, [searchTerm])\n\n  // Infinite scroll\n  async function loadItems(prevResults = [], startCursor = 20) {\n    const response = await axios(`${url}/-/v1/search?text=${searchTerm}&from=${startCursor}`)\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let newResults = []\n        \n        // For every 20 new items\n        for (let i = startCursor; i < startCursor + 20; i++) {\n          if (response.data.objects.length > 0) {\n            // Concat existing results array with new array of items\n            newResults = [...prevResults].concat(response.data.objects)\n          } else {\n            // If no new items, keep existing array and disable infinite scroll\n            newResults = [...prevResults]\n            setHasNextPage(false)\n          }\n        }\n\n        resolve(newResults)\n      }, 1000)\n    })\n  }\n\n  function handleLoadMore() {\n    setLoading(true)\n    loadItems(results, results.length).then(newResults => {\n      setLoading(false)\n      setResults(newResults)\n    })\n  }\n\n  const infiniteRef = useInfiniteScroll({\n    loading,\n    hasNextPage,\n    onLoadMore: handleLoadMore,\n    scrollContainer: \"window\"\n  })\n\n  return {\n    loading,\n    error,\n    errorMsg,\n    loadTime,\n    totalResults,\n    results,\n    infiniteRef,\n    setHasNextPage\n  }\n}\n\nexport default useSearch","import React from \"react\"\nimport { Card } from \"react-rainbow-components\"\nimport { Link } from \"react-router-dom\"\nimport { v1 as uuidv1 } from \"uuid\"\n\nimport \"./Item.scss\"\n\nfunction Items({data}) {\n  const {name, description, version, keywords} = data.package\n  \n  return (\n    <Link to={{\n      pathname: `/${name}`,\n      state: { packageName: name }\n    }}>\n      <Card className=\"item\" >\n        <h3>\n          {name}\n          <span className=\"version\"> {version}</span>\n          {data.searchScore > 1 && <div className=\"exact-match\">exact match</div>}\n        </h3>\n        <p className=\"description\">{description}</p>\n        {keywords &&\n          <ul className=\"keywords\">\n            {keywords.map(tag => <li key={uuidv1()}>{tag}</li>)}\n          </ul>\n        }\n      </Card>\n    </Link>\n  )\n}\n\nexport default Items\n","import { useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nfunction useDetails(packageName) {\n  const [apiData, setApiData] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [errorMsg, setErrorMsg] = useState(\"\")\n\n  const proxy = \"https://morning-cove-30121.herokuapp.com\"\n  const url = \"http://registry.npmjs.org\"\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true)\n        const response = await axios(`${proxy}/${url}/${packageName}`)\n  \n        // Get latest version from response » data » dist-tags » latest\n        const version = response.data && Object.entries(response.data)\n          .map(([key, value]) => key === \"dist-tags\" ? value.latest : null)\n          .filter(item => item !== null)\n          .toString()\n  \n        // Get latest version details from response » versions\n        const data = response.data && Object.entries(response.data.versions).filter(([key, value]) => key === version)[0][1]\n        setApiData(data)\n        setLoading(false)\n      } catch (error) {\n        setError(true)\n        setErrorMsg(\"We cannot fetch the data at the moment. Please try again later.\")\n        setLoading(false)\n      }\n    }\n    fetchData()\n  }, [packageName])\n  \n  return {\n    loading,\n    error,\n    errorMsg,\n    apiData\n  }\n}\n\nexport default useDetails","export function timer(ms) {\n  return new Promise(res => setTimeout(res, ms))\n}\n\nexport function isEmpty(obj) {\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      return false\n    }\n  }\n  return JSON.stringify(obj) === JSON.stringify({})\n}","import{ useEffect, useState } from \"react\"\nimport { randomColor } from \"randomcolor\"\nimport axios from \"axios\"\n\nimport { timer } from \"../../../utils\"\n\nconst TIMER_MS = 300\n\nfunction useDependencyGraph(packageName) {\n  const [graph, setGraph] = useState({})\n  const [loading, setLoading] = useState(false)\n  const [progress, setProgress] = useState(0)\n  const [error, setError] = useState(false)\n  const [errorMsg, setErrorMsg] = useState(\"\")\n\n  const proxy = \"https://morning-cove-30121.herokuapp.com\"\n  const url = \"http://registry.npmjs.org\"\n  \n  useEffect(() => {\n    const loadDependencies = async (packageName) => {\n      try {\n        const initialPackage = {\n          id: packageName,\n          label: packageName,\n          title: packageName\n        }\n        const nodes = [initialPackage]\n        const edges = new Set()\n        const queue = [packageName]\n        const visited = new Set()\n    \n        while (queue.length > 0) {\n          setLoading(true)\n          setProgress(queue.length)\n          const queueItem = queue.shift()\n          const { parent, children } = await fetchDepedencies(queueItem)\n          \n          // Update visited\n          visited.add(parent)\n          \n          // For each child dependency found\n          children.forEach(child => {\n            const node = {\n              id: child,\n              label: child,\n              title: child,\n              color: randomColor()\n            }\n            \n            const edge = {\n              from: parent,\n              to: child\n            }\n    \n            // Update edges\n            edges.add(edge)\n            \n            // Unless already visited\n            if (!visited.has(child)) {\n              queue.push(child) // Push package to the queue\n              nodes.push(node) // Push node obj to nodes\n              visited.add(child) // Add to visited set\n            }\n          })\n        }\n        // Build graph from results\n        setGraph({\n          nodes: nodes,\n          edges: [...edges] // Set to Array using ES6 spread operator syntax\n        })\n\n        setLoading(false)\n      } catch(error) {\n        setError(true)\n        setErrorMsg(\"We cannot fetch the dependencies data. Please try again later.\")\n        setLoading(false)\n      }\n    }\n    \n    loadDependencies(packageName)\n  }, [packageName])\n\n  // API call\n  const fetchDepedencies = async (packageName) => {\n    try {\n      const response = await axios(`${proxy}/${url}/${packageName}`)\n      // Get latest version from response » data » dist-tags » latest\n      const version =\n        response.data &&\n        Object.entries(response.data)\n          .map(([key, value]) => (key === \"dist-tags\" ? value.latest : null))\n          .filter(item => item !== null)\n          .toString()\n\n      // Get latest version details from response » versions\n      const data =\n        response.data &&\n        Object.entries(response.data.versions).filter(\n          ([key, value]) => key === version\n        )[0][1]\n\n      let dependenciesArr = []\n      // Loop over the dependencies object\n      data.dependencies && Object.entries(data.dependencies).map(([key, value]) => {\n        dependenciesArr.push(key)\n        return null\n      })\n      \n      const results = {\n        parent: packageName,\n        children: dependenciesArr\n      }\n      \n      // Wait \"TIMER_MS\" second between API calls\n      await timer(TIMER_MS)\n      return results\n    } catch(error) {\n      setError(true)\n      setErrorMsg(\"We cannot fetch the dependencies data. Please try again later.\")\n      setLoading(false)\n    }\n  }\n\n  return {\n    loading,\n    progress,\n    error,\n    errorMsg,\n    graph\n  }\n}\n\nexport default useDependencyGraph\n","// Graph options\nexport const options = {\n  height: \"500px\",\n  physics: {\n    enabled: false\n  },\n  interaction: {\n    hideEdgesOnDrag: false\n  },\n  layout: {\n    hierarchical: false\n  },\n  nodes: {\n    font: {\n      face: \"Roboto Mono\",\n      color: \"#333333\",\n      multi: \"html\"\n    },\n    shape: \"dot\",\n    size: 7\n  },\n  edges: {\n    color: {\n      inherit: \"from\"\n    },\n    width: 0.3,\n    smooth: {\n      enabled: true,\n      type: \"continuous\",\n    }\n  }\n}","import React from \"react\"\nimport Graph from \"react-graph-vis\"\nimport { Loader, Message } from \"semantic-ui-react\"\n\nimport \"./DependencyGraph.scss\"\nimport { isEmpty } from \"../../utils\"\nimport useDependencyGraph from \"./hooks/useDependencyGraph\"\nimport { options } from \"./DepedencyGraphOptions\"\n\nfunction DependencyGraph({packageName}) {\n  const {\n    loading,\n    progress,\n    error,\n    errorMsg,\n    graph,\n  } = useDependencyGraph(packageName)\n\n  return (\n    <div className=\"dependecy-graph\">\n      {\n        loading &&\n        <Loader\n          indeterminate\n          active\n          inline=\"centered\"\n          content={`Remaining packages: ${progress}`}\n          style={{margin: \"20px 0\"}}\n        />\n      }\n\n      { error && <Message error content={errorMsg} /> }\n\n      {\n        !isEmpty(graph) &&\n        <Graph graph={graph} options={options}/>\n      }\n    </div>\n  )\n}\n\nexport default DependencyGraph","import React from \"react\"\nimport { useLocation, useHistory, useParams } from \"react-router-dom\"\nimport { Card } from \"react-rainbow-components\"\nimport { Message } from \"semantic-ui-react\"\n\nimport \"./Details.scss\"\nimport useDetails from \"./hooks/useDetails\"\nimport DependecyGraph from \"../DependencyGraph\"\n\nfunction Details() {\n  const location = useLocation()\n  const param = useParams()\n  const history = useHistory()\n  const packageName = location.state ? location.state.packageName : param.packageName\n  const { loading, error, errorMsg, apiData } = useDetails(packageName)\n\n  function handleClick(event) {\n    event.preventDefault()\n    history.goBack()\n  }\n\n  return (\n    <Card className=\"details\">\n      <a href=\"/\" onClick={(event) => handleClick(event)}>&laquo; Back</a>\n      {loading && <p className=\"loading\">Loading...</p>}\n      {error && <Message error content={errorMsg} />}\n      {apiData &&\n        <>\n          <h1>{packageName} <span className=\"version\">{apiData.version}</span></h1>\n          <p className=\"description\">{apiData.description}</p>\n          {apiData.keywords &&\n            <ul className=\"keywords\">\n              {apiData.keywords.map((tag,i) => <li key={`${tag}-${i}`}>{tag}</li>)}\n            </ul>\n          }\n          <h3 className=\"dependencies-heading\">→ dependencies</h3>\n          <DependecyGraph packageName={packageName} />\n        </>\n      }\n    </Card>\n  )\n}\n\nexport default Details","import React, { useState, useEffect } from \"react\"\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom'\nimport { v1 as uuidv1 } from \"uuid\"\nimport ScrollToTop from \"react-scroll-up\"\nimport { Form, Input, Button, Message, Icon } from \"semantic-ui-react\"\nimport { Card } from \"react-rainbow-components\"\n\nimport \"./Search.scss\"\nimport { scrollStyles } from \"./SearchStyles\"\nimport useSearch from \"./hooks/useSearch\"\nimport Item from \"../Item\"\nimport Details from \"../Details\"\n\nfunction Search() {\n  const [query, setQuery] = useState(\"\")\n  const [search, setSearch] = useState(\"\")\n  const {\n    loading,\n    error,\n    errorMsg,\n    loadTime,\n    totalResults,\n    results,\n    infiniteRef,\n    setHasNextPage\n  } = useSearch(query)\n\n  const location = useLocation()\n  const history = useHistory()\n  \n  // Routing\n  useEffect(() => {\n    if (location.state) {\n      setSearch(location.state.referrer)\n      setQuery(location.state.referrer)\n    } else {\n      setSearch(query)\n    }\n\n    if (location.search) {\n      setSearch(location.search.split(\"=\")[1])\n      setQuery(location.search.split(\"=\")[1])\n    } else {\n      setSearch(query)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.state, location.search])\n  \n  function handleChange(event) {\n    const {value} = event.target\n    setSearch(value)\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n    history.push({\n      pathname: \"/\",\n      search: `?q=${search}`,\n      state: { referrer: search }\n    })\n    setHasNextPage(true)\n  }\n\n  return (\n    <>\n      <Card className=\"search\">\n        <Form onSubmit={event => handleSubmit(event)} className=\"search-form\" error={error}>\n          <Input\n            action={\n              <Button primary type=\"submit\" className=\"search-button\">Search</Button>\n            }\n            fluid\n            size=\"large\"\n            icon=\"search\"\n            iconPosition=\"left\"\n            type=\"text\"\n            value={search}\n            placeholder=\"enter npm package name\"\n            className=\"search-input\"\n            onChange={event => handleChange(event)}\n          />\n          <Message\n            error\n            content={errorMsg}\n          />\n        </Form>\n      </Card>\n      \n      <Switch>\n        <Route exact path=\"/\">\n          {results &&\n            <>\n              <p className=\"stats\">Found {totalResults} results ({loadTime} seconds)</p>\n              <div className=\"results\" ref={infiniteRef}>\n                {\n                  results.length > 0 ?\n                    results.map(item => <Item key={uuidv1()} data={item}></Item>) :\n                    <Card className=\"no-results\"><p>No results found.</p></Card>\n                }\n              </div>\n            </>\n          }\n          {loading && <p className=\"loading\">Loading...</p> }\n        </Route>\n        <Route path=\"/:packageName\">\n          <Details />\n        </Route>\n      </Switch>\n      \n      <ScrollToTop showUnder={480} style={scrollStyles}>\n        <Icon name=\"angle double up\" className=\"scroll\" />\n      </ScrollToTop>\n    </>\n  )\n}\n\nexport default Search","import React from \"react\"\nimport { Container } from \"semantic-ui-react\"\n\nimport \"./App.scss\"\nimport Search from \"../Search\"\n\nfunction App() {\n  \n  return (\n    <Container className=\"app\">\n      <Search />\n    </Container>\n  )\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\nimport * as serviceWorker from \"./serviceWorker\"\nimport \"semantic-ui-css/semantic.min.css\"\n\nimport App from \"./components/App\"\nimport \"./styles/index.scss\"\n\nconst getBasename = path => path.substr(0, path.lastIndexOf('/'))\n\nReactDOM.render(\n  <Router basename={getBasename(window.location.pathname)}>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more: https://create-react-app.dev/docs/making-a-progressive-web-app/\nserviceWorker.unregister()"],"sourceRoot":""}